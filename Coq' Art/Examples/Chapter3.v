Check Prop.

Section Minimal_prop_logic.
    Variables P Q R T : Prop.
    Theorem imp_trans : (P->Q) -> (Q->R) -> P -> R.
    Proof.
        intros. apply H in H1. apply H0 in H1. assumption.
    Qed.
    
    Theorem imp_trans2 : (P->Q) -> (Q->R) -> P -> R.
    Proof.
        auto.
    Qed.
End Minimal_prop_logic.

Section TEST.
    Variables P Q : Prop.
    Hypothesis H : ((P -> Q) -> Q) -> Q.
    Hypothesis p : P.

    Lemma Rem : (P -> Q) -> Q.
    Proof (fun H0:P->Q => H0 p).

    Lemma triple_impl : Q.
    Proof (H Rem).
End TEST.

Print triple_impl.

(*
    Composing tactics.

    tac1; tac2. (applies tac1, and then applies tac2 on every subgoals generated by tac1.)
    tac; [tac1|tac2|...|tacn].
    || orelse tactical.
*)

Section TEST2.
    Variables P Q R T : Prop.
    Theorem try_example : (P -> Q -> R -> T) -> (P -> Q) -> (P -> R -> T).
    Proof.
        intros H H' p r.
        apply H; [assumption | apply H' in p | assumption]. assumption.
    Qed.

    (* 
        The set of {assumption, exact, apply, intro} of tactics is complete for minimal propositional logic.
    *)
End TEST2.

Section TEST3.
    Variables P Q R T : Prop.
    Hypothesis  (H : P -> Q)
                (H0 : Q -> R)
                (H1 : (P -> R) -> T -> Q)
                (H2 : (P -> R) -> T).
    
    Theorem cut_example : Q.
    Proof.
        cut (P -> R).
        intro H3.
        apply H1; [assumption | apply H2; assumption].
        intro; apply H0; apply H; assumption.
    Qed.
